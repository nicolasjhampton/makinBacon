{"version":3,"sources":["socket.js","directives.js","controllers.js","module.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/************************\n 1. socket.js\n ************************/\n\n(function(){\n\n  // simple socket.io service\n\n  var app = angular.module('myApp.factories', []);\n\n  app.factory('socket', function() {\n    var socket = io.connect();\n    return socket;\n  });\n\n})();\n/*  end of file  */","/************************\n 2. directives.js\n ************************/\n\n(function(){\n\nvar app = angular.module(\"myApp.directives\", []);\n\n// Directive for our game input to choose a movie/actor\napp.directive('picker', function() {\n      return {\n        restrict: 'E',\n        scope: {\n          nextcredits: '=',\n          gameid: '='\n        },\n        templateUrl: './js/partials/_picker.html',\n        controller: function (socket) {\n\n          // Button for emitting new stack addition\n          this.selection = function (data, gameID) {\n            // We're going to emit this to the always listening update\n            // socket on the server, server will re-emit to our\n            // specific room after changes\n            // {gameID: index, player: (player who made choice, this client), type: ('movies' or 'actors'), id:(id of movie or actor) }\n            var message = {\n                            gameID: gameID,\n                            player: socket.username,\n                            type: data.type,\n                            id: data.id,\n                          };\n\n            socket.emit('update', message);\n\n          }; // End of emit update button\n\n        },\n        controllerAs: 'picker'\n      };\n  });\n\napp.directive('playerList', function() {\n      return {\n        restrict: 'E',\n        scope: {\n          count: '=',\n          listofplayers: '=',\n          bacon: '='\n        },\n        templateUrl: './js/partials/_playerList.html'\n      };\n  });\n\napp.directive('usernameInput', function() {\n      return {\n        restrict: 'E',\n        scope:{},\n        templateUrl: './js/partials/_usernameInput.html',\n        controller: function (socket) {\n\n          this.createUsername = function(username) {\n            socket.username = username;\n            socket.emit('adduser', {username:socket.username});\n          };\n\n        },\n        controllerAs: 'usernameInput'\n      };\n});\n\n// Directive for our game input to choose a movie/actor\napp.directive('gameSelector', function() {\n      return {\n        restrict: 'E',\n        scope: {\n          gamelist: '='\n        },\n        templateUrl: './js/partials/_gameSelector.html',\n        controller: function (socket) {\n\n          // Button to start a new game\n          this.startNewGame = function () {\n            var message = {gameID:'newGame', player:socket.username};\n            socket.emit('select game', message);\n          };\n\n          // Button to switch to another game\n          this.joinGame = function (data) {\n            var message = {gameID:data.gameID, player:socket.username};\n            socket.emit('select game', message);\n          };\n\n        },\n        controllerAs: 'gameSelector'\n      };\n  });\n\n// Directive for each item in the gameStack\napp.directive('gameStack', function() {\n      return {\n        restrict: 'E',\n        scope: {\n          stackitem: '=stackitem',\n          first: '=first',\n          last: '=last'\n        },\n        templateUrl: './js/partials/_gameStack.html',\n        link: function(scope) {\n\n          // This decided how each stackitem is laid out\n          if(scope.stackitem.type === 'actors') {\n            scope.text = \"right\";\n            scope.image = \"left\";\n            if(scope.first) {\n              scope.subtitle = \"was in...\";\n            } else if(scope.last){\n              scope.subtitle = \"\";\n            } else {\n              scope.subtitle = \"who was in...\";\n            }\n          } else if(scope.stackitem.type === 'movies') {\n            scope.text = \"left\";\n            scope.image = \"right\";\n            scope.subtitle = \"with...\"\n          }\n\n        } // end of link\n      }; // end of return\n  }); // end of directive\n\n})();\n/*  end of file  */","/************************\n 3. controllers.js\n ************************/\n\n(function(){\n\n  var app = angular.module('myApp.mainController', []);\n\n  // Controller for the input and stack display\n  app.controller('MainCtrl', function($scope, socket){\n\n    this.usernamePresent = false;\n\n    // Shows or doesn't show our game elements\n    this.inGame = false;\n\n\n\n    /**********************\n      Socket listeners\n     **********************/\n\n     // controller reference for our callbacks\n     var main = this;\n\n\n    socket.on('init', function(data){\n\n      main.game = data.game;\n      main.gameList = data.gameList;\n      main.username = data.username;\n      $scope.$digest();\n\n    });\n\n    socket.on('gameList', function(data){\n      main.gameList = data.gameList;\n      $scope.$digest();\n    });\n\n    /*\n     * 'update': Socket listener for our stack updates\n     */\n    socket.on('update', function(data){\n\n      console.log(data);\n      // Update our local stack variable in the scope\n      main.game = data.game;\n\n      //This is how we direct each pick for our picker\n      main.gameID = data.game.gameID;\n\n\n\n      // This actually tests to see if we're in a game yet\n      if(Object.keys(data.game)[0] !== undefined) {\n\n        // turns our game elements on\n        main.inGame = true;\n\n        //this will be the list of picks for the picker\n        main.nextcredits = data.game.stack[data.game.stack.length - 1].credits\n        console.log(main.nextcredits);\n        main.playerList = Object.keys(data.game.playerList).map(function(value) {\n          return {name:value, score:data.game.playerList[value]};\n        });\n      }\n\n      $scope.$digest();\n\n    }); // End of update socket listener\n\n    /*\n     * This is an echo that causes all players in a room to emit\n     * a signal to the server to detach them from this room\n     */\n    socket.on('leaveroom', function() {\n\n      socket.emit('leaveroom', {ID:main.gameID});\n\n    });\n  }); // End of controller\n})();\n/*  end of file  */","/************************\n 4. module.js\n ************************/\n\n(function(){\n\n  // Create app, attach all parts to variable\n  var app = angular.module(\"myApp\", [\"myApp.factories\", \"myApp.directives\", \"myApp.mainController\"]);\n\n})();\n/*  end of file  */"],"sourceRoot":"/source/"}